<?php //%255BApp%255CEntity%255CCliente%2524password%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
    ],
    null,
    [
        'stdClass' => [
            'message' => [
                1 => 'New password can not be blank.',
                'New password is required to be minimum 6 chars in length and to include at least one letter and one number.',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'pattern' => [
                2 => '/^(?=.*[a-z])(?=.*\\d).{6,}$/i',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
    ],
    []
); }];
